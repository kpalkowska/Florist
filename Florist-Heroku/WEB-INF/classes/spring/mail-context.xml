<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
		
	<context:component-scan base-package="com.spring.service.email" />
	<context:annotation-config />	

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="smtp.gmail.com" />
	    <property name="port" value="587" />
	    <property name="username" value="florist.project@gmail.com" />
	    <property name="password" value="florist2016" />
	
	    <property name="javaMailProperties">
	       <props>
	       		  <prop key="mail.transport.protocol">smtp</prop>
	              <prop key="mail.smtp.auth">true</prop>
	              <prop key="mail.smtp.starttls.enable">true</prop>
				  <prop key="mail.debug">true</prop>
	           </props>
	    </property>
	</bean>
	
	<!-- You can have some pre-configured messagess also which are ready to send -->
    <bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="florist.project@gmail.com"></property>
        <property name="subject" value="Florist"/>
    </bean>

</beans>